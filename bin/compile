#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output

# Heroku-provided params
BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

# ENV_DIR contains files representing config vars. Each file's name is the key
#   of the var, and the file contents are the value of the var. Load selected
#   vars into the environment with this function
export_env_dir() {
  env_dir=$1
  env_var=$2
  if [ -f "$env_dir/$env_var" ]; then
      export "$env_var=$(cat $env_dir/$env_var)"
  fi
}

export_env_dir $ENV_DIR DATABASE_URL
export_env_dir $ENV_DIR SQITCH_ROOT

PATH="$BUILD_DIR/local/bin:$PATH"

export PERL5LIB="$BUILD_DIR/local/lib/perl5"
export PERL_CPANM_OPT="--quiet --notest -l $BUILD_DIR/local"

rm -rf $BUILD_DIR/local
if [ -d $CACHE_DIR/local ]; then
  cp -a $CACHE_DIR/local $BUILD_DIR/local
fi

cd $BUILD_DIR

if ! [ -e $BUILD_DIR/local/bin/cpanm ]; then
  echo "-----> Bootstrapping cpanm"
  curl -L --silent https://raw.github.com/miyagawa/cpanminus/master/cpanm | perl - App::cpanminus 2>&1
fi

echo "-----> Installing Sqitch"
cpanm App::Sqitch DBD::Pg 2>&1

if [ -d $BUILD_DIR/local ]; then
  rm -rf $CACHE_DIR/local
  mkdir -p $CACHE_DIR
  cp -a $BUILD_DIR/local $CACHE_DIR/local
fi

if [ -d $SQITCH_ROOT ]; then
  cd $SQITCH_ROOT
fi

echo "-----> Adding sqitch database target"
sqitch target add heroku_db "$DATABASE_URL"

echo "-----> Making this target the default"
sqitch config core.pg.target heroku_db

echo "-----> Running Database Migrations"
sqitch deploy heroku_db

echo "-----> Persisting settings"
PROFILE_PATH="$BUILD_DIR/.profile.d/sqitch.sh"
mkdir -p $(dirname $PROFILE_PATH)

echo "export PERL5LIB=/app/local/lib/perl5" >> $PROFILE_PATH
echo "export PATH=\$HOME/local/bin:\$PATH" >> $PROFILE_PATH
